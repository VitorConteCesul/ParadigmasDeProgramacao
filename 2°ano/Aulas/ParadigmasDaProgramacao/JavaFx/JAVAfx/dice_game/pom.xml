<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <!--Versão do formato do arquivo POM-->
  <modelVersion>4.0.0</modelVersion>

  <!--Identidade do nosso futuro JAR(é aqui que muda o nome da publicação-->
  <groupId>org.vito</groupId> <!--Domínio invertido da publicação-->
  <artifactId>dice_game</artifactId> <!--Nome curto-->
  <version>1.0-SNAPSHOT</version> <!--Número da versão (1, 2, 3, 4-->
  <packaging>jar</packaging> <!--Tipo do artefato final-->


  <!--Propriedades = "Variaveis" reutilizadas no xml-->
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!--Digo ao maven: Compile na versão X do Java-->
    <!--Se deixar padrão ele compila na versão 5 do Java-->
    <maven.compiler.release>23</maven.compiler.release>
    <javafx.version>21</javafx.version>
  </properties>

  <!--Lista de bibliotecas que PRECISAMOS que o maven baixe-->
  <!--search.maven.org-->
  <dependencies>
    <!--Biblioteca do JavaFX para controles visuais
        se removido essa dependencia, qualquer objeto que
        importe de javafx.scene.control vai falhar na compilação
    -->
    <dependency>
      <groupId>org.openjfx</groupId>
      <artifactId>javafx-controls</artifactId>
      <!--Puxa a versão do bloco <properties> -->
      <version>${javafx.version}</version>
    </dependency>

    <!--Dependencia do driver MongoDB-->
    <dependency>
      <groupId>org.mongodb</groupId>
      <artifactId>mongodb-driver-sync</artifactId>
      <version>5.5.0</version>
    </dependency>

  </dependencies>

  <!-- A Tag build é onde dizemos ao maven como queremos rodar ou montar o projeto além do básico-->
  <build>
    <plugins>
      <!-- Adiciona o comando mvn javafx: run para rodar nos padrões do jfx-->
      <plugin>

          <groupId>org.openjfx</groupId>
          <artifactId>javafx-maven-plugin</artifactId>
          <version>0.0.8</version>
          <configuration>
            <!-- Colocar a classe que possui o método start(Stage)-->
            <mainClass>org.vito.ui.MainApp</mainClass>
          </configuration>
      </plugin>

      <!--Plugin de assembly: Cria um JAR contendo todas as libs.
          Sem ele, seria obrigatório levar junto o .jar do driver
          ex: .jar do javafx-controls...
      -->
      <plugin>

          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.7.1</version>

          <configuration>
            <archive>

              <!-- Diz ao launcher "qual classe tem public static void main"-->
              <manifest>
                <mainClass>org.vito.ui.MainApp</mainClass>
              </manifest>
            </archive>
             <!-- Modelo pronto que empacota dependencias-->
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
          </configuration>

        <!--Execução automatica: Toda vez que rodar "mvn package"
        ele gera o jar. Se remover este bloco, haveria necessidade
         de chamar o assembly manualmente-->
        <executions>
          <execution>
            <id>make</id>
            <phase>package</phase>
            <goals><goal>single</goal></goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>


</project>
